-ifndef(_GEN_SOCKET_SHARED).
-define(_GEN_SOCKET_SHARED, 1).
-type protocol_name() ::
default | ip | icmp | igmp | ipip | tcp | egp | pup |
udp | idp | tp | dccp | ipv6 | routing | fragment |
rsvp | gre | esp | ah | icmpv6 | none | dstopts |
mtp | encap | pim | comp | sctp | udplite | raw.

%% Protocol family (aka domain)
family_to_int(unspec)     -> 0;
family_to_int(local)      -> 1;
family_to_int(unix)       -> 1;
family_to_int(file)       -> 1;
family_to_int(inet)       -> 2;
family_to_int(ax25)       -> 3;
family_to_int(ipx)        -> 4;
family_to_int(appletalk)  -> 5;
family_to_int(netrom)     -> 6;
family_to_int(bridge)     -> 7;
family_to_int(atmpvc)     -> 8;
family_to_int(x25)        -> 9;
family_to_int(inet6)      -> 10;
family_to_int(rose)       -> 11;
family_to_int(decnet)     -> 12;
family_to_int(netbeui)    -> 13;
family_to_int(security)   -> 14;
family_to_int(key)        -> 15;
family_to_int(netlink)    -> 16;
family_to_int(route)      -> 16;
family_to_int(packet)     -> 17;
family_to_int(ash)        -> 18;
family_to_int(econet)     -> 19;
family_to_int(atmsvc)     -> 20;
family_to_int(rds)        -> 21;
family_to_int(sna)        -> 22;
family_to_int(irda)       -> 23;
family_to_int(pppox)      -> 24;
family_to_int(wanpipe)    -> 25;
family_to_int(llc)        -> 26;
family_to_int(can)        -> 29;
family_to_int(tipc)       -> 30;
family_to_int(bluetooth)  -> 31;
family_to_int(iucv)       -> 32;
family_to_int(rxrpc)      -> 33;
family_to_int(isdn)       -> 34;
family_to_int(phonet)     -> 35;
family_to_int(ieee802154) -> 36.

family_to_atom(0)         -> unspec;
family_to_atom(1)         -> unix;
family_to_atom(2)         -> inet;
family_to_atom(3)         -> ax25;
family_to_atom(4)         -> ipx;
family_to_atom(5)         -> appletalk;
family_to_atom(6)         -> netrom;
family_to_atom(7)         -> bridge;
family_to_atom(8)         -> atmpvc;
family_to_atom(9)         -> x25;
family_to_atom(10)        -> inet6;
family_to_atom(11)        -> rose;
family_to_atom(12)        -> decnet;
family_to_atom(13)        -> netbeui;
family_to_atom(14)        -> security;
family_to_atom(15)        -> key;
family_to_atom(17)        -> packet;
family_to_atom(18)        -> ash;
family_to_atom(19)        -> econet;
family_to_atom(20)        -> atmsvc;
family_to_atom(21)        -> rds;
family_to_atom(22)        -> sna;
family_to_atom(23)        -> irda;
family_to_atom(24)        -> pppox;
family_to_atom(25)        -> wanpipe;
family_to_atom(26)        -> llc;
family_to_atom(29)        -> can;
family_to_atom(30)        -> tipc;
family_to_atom(31)        -> bluetooth;
family_to_atom(32)        -> iucv;
family_to_atom(33)        -> rxrpc;
family_to_atom(34)        -> isdn;
family_to_atom(35)        -> phonet;
family_to_atom(36)        -> ieee802154;
family_to_atom(_)         -> unknown.

family(X) when is_atom(X)    -> family_to_int(X);
family(X) when is_integer(X) -> family_to_atom(X).

% Select a protocol within the family (0 means use the default
% protocol in the family)
-spec protocol_to_int(protocol_name()) -> integer().
protocol_to_int(default)  -> 0;
protocol_to_int(ip)       -> 0;
protocol_to_int(icmp)     -> 1;
protocol_to_int(igmp)     -> 2;
protocol_to_int(ipip)     -> 4;
protocol_to_int(tcp)      -> 6;
protocol_to_int(egp)      -> 8;
protocol_to_int(pup)      -> 12;
protocol_to_int(udp)      -> 17;
protocol_to_int(idp)      -> 22;
protocol_to_int(tp)       -> 29;
protocol_to_int(dccp)     -> 33;
protocol_to_int(ipv6)     -> 41;
protocol_to_int(routing)  -> 43;
protocol_to_int(fragment) -> 44;
protocol_to_int(rsvp)     -> 46;
protocol_to_int(gre)      -> 47;
protocol_to_int(esp)      -> 50;
protocol_to_int(ah)       -> 51;
protocol_to_int(icmpv6)   -> 58;
protocol_to_int(none)     -> 59;
protocol_to_int(dstopts)  -> 60;
protocol_to_int(mtp)      -> 92;
protocol_to_int(encap)    -> 98;
protocol_to_int(pim)      -> 103;
protocol_to_int(comp)     -> 108;
protocol_to_int(sctp)     -> 132;
protocol_to_int(udplite)  -> 136;
protocol_to_int(raw)      -> 255.

protocol_to_atom(0)       -> ip;
protocol_to_atom(1)       -> icmp;
protocol_to_atom(2)       -> igmp;
protocol_to_atom(4)       -> ipip;
protocol_to_atom(6)       -> tcp;
protocol_to_atom(8)       -> egp;
protocol_to_atom(12)      -> pup;
protocol_to_atom(17)      -> udp;
protocol_to_atom(22)      -> idp;
protocol_to_atom(29)      -> tp;
protocol_to_atom(33)      -> dccp;
protocol_to_atom(41)      -> ipv6;
protocol_to_atom(43)      -> routing;
protocol_to_atom(44)      -> fragment;
protocol_to_atom(46)      -> rsvp;
protocol_to_atom(47)      -> gre;
protocol_to_atom(50)      -> esp;
protocol_to_atom(51)      -> ah;
protocol_to_atom(58)      -> icmpv6;
protocol_to_atom(59)      -> none;
protocol_to_atom(60)      -> dstopts;
protocol_to_atom(92)      -> mtp;
protocol_to_atom(98)      -> encap;
protocol_to_atom(103)     -> pim;
protocol_to_atom(108)     -> comp;
protocol_to_atom(132)     -> sctp;
protocol_to_atom(136)     -> udplite;
protocol_to_atom(255)     -> raw;
protocol_to_atom(_X)      -> unknown.

protocol(X) when is_atom(X)    -> protocol_to_int(X);
protocol(X) when is_integer(X) -> protocol_to_atom(X).


arphdr(?ARPHRD_NETROM)             -> arphrd_netrom;
arphdr(?ARPHRD_ETHER)              -> arphrd_ether;
arphdr(?ARPHRD_EETHER)             -> arphrd_eether;
arphdr(?ARPHRD_AX25)               -> arphrd_ax25;
arphdr(?ARPHRD_PRONET)             -> arphrd_pronet;
arphdr(?ARPHRD_CHAOS)              -> arphrd_chaos;
arphdr(?ARPHRD_IEEE802)            -> arphrd_ieee802;
arphdr(?ARPHRD_ARCNET)             -> arphrd_arcnet;
arphdr(?ARPHRD_APPLETLK)           -> arphrd_appletlk;
arphdr(?ARPHRD_DLCI)               -> arphrd_dlci;
arphdr(?ARPHRD_ATM)                -> arphrd_atm;
arphdr(?ARPHRD_METRICOM)           -> arphrd_metricom;
arphdr(?ARPHRD_IEEE1394)           -> arphrd_ieee1394;
arphdr(?ARPHRD_EUI64)              -> arphrd_eui64;
arphdr(?ARPHRD_INFINIBAND)         -> arphrd_infiniband;
arphdr(?ARPHRD_SLIP)               -> arphrd_slip;
arphdr(?ARPHRD_CSLIP)              -> arphrd_cslip;
arphdr(?ARPHRD_SLIP6)              -> arphrd_slip6;
arphdr(?ARPHRD_CSLIP6)             -> arphrd_cslip6;
arphdr(?ARPHRD_RSRVD)              -> arphrd_rsrvd;
arphdr(?ARPHRD_ADAPT)              -> arphrd_adapt;
arphdr(?ARPHRD_ROSE)               -> arphrd_rose;
arphdr(?ARPHRD_X25)                -> arphrd_x25;
arphdr(?ARPHRD_HWX25)              -> arphrd_hwx25;
arphdr(?ARPHRD_CAN)                -> arphrd_can;
arphdr(?ARPHRD_PPP)                -> arphrd_ppp;
arphdr(?ARPHRD_HDLC)               -> arphrd_hdlc;
arphdr(?ARPHRD_LAPB)               -> arphrd_lapb;
arphdr(?ARPHRD_DDCMP)              -> arphrd_ddcmp;
arphdr(?ARPHRD_RAWHDLC)            -> arphrd_rawhdlc;
arphdr(?ARPHRD_TUNNEL)             -> arphrd_tunnel;
arphdr(?ARPHRD_TUNNEL6)            -> arphrd_tunnel6;
arphdr(?ARPHRD_FRAD)               -> arphrd_frad;
arphdr(?ARPHRD_SKIP)               -> arphrd_skip;
arphdr(?ARPHRD_LOOPBACK)           -> arphrd_loopback;
arphdr(?ARPHRD_LOCALTLK)           -> arphrd_localtlk;
arphdr(?ARPHRD_FDDI)               -> arphrd_fddi;
arphdr(?ARPHRD_BIF)                -> arphrd_bif;
arphdr(?ARPHRD_SIT)                -> arphrd_sit;
arphdr(?ARPHRD_IPDDP)              -> arphrd_ipddp;
arphdr(?ARPHRD_IPGRE)              -> arphrd_ipgre;
arphdr(?ARPHRD_PIMREG)             -> arphrd_pimreg;
arphdr(?ARPHRD_HIPPI)              -> arphrd_hippi;
arphdr(?ARPHRD_ASH)                -> arphrd_ash;
arphdr(?ARPHRD_ECONET)             -> arphrd_econet;
arphdr(?ARPHRD_IRDA)               -> arphrd_irda;
arphdr(?ARPHRD_FCPP)               -> arphrd_fcpp;
arphdr(?ARPHRD_FCAL)               -> arphrd_fcal;
arphdr(?ARPHRD_FCPL)               -> arphrd_fcpl;
arphdr(?ARPHRD_FCFABRIC)           -> arphrd_fcfabric;
arphdr(?ARPHRD_IEEE802_TR)         -> arphrd_ieee802_tr;
arphdr(?ARPHRD_IEEE80211)          -> arphrd_ieee80211;
arphdr(?ARPHRD_IEEE80211_PRISM)    -> arphrd_ieee80211_prism;
arphdr(?ARPHRD_IEEE80211_RADIOTAP) -> arphrd_ieee80211_radiotap;
arphdr(?ARPHRD_IEEE802154)         -> arphrd_ieee802154;
arphdr(?ARPHRD_PHONET)             -> arphrd_phonet;
arphdr(?ARPHRD_PHONET_PIPE)        -> arphrd_phonet_pipe;
arphdr(?ARPHRD_CAIF)               -> arphrd_caif;
arphdr(?ARPHRD_VOID)               -> arphrd_void;
arphdr(?ARPHRD_NONE)               -> arphrd_none;

arphdr(arphrd_netrom)              -> ?ARPHRD_NETROM;
arphdr(arphrd_ether)               -> ?ARPHRD_ETHER;
arphdr(arphrd_eether)              -> ?ARPHRD_EETHER;
arphdr(arphrd_ax25)                -> ?ARPHRD_AX25;
arphdr(arphrd_pronet)              -> ?ARPHRD_PRONET;
arphdr(arphrd_chaos)               -> ?ARPHRD_CHAOS;
arphdr(arphrd_ieee802)             -> ?ARPHRD_IEEE802;
arphdr(arphrd_arcnet)              -> ?ARPHRD_ARCNET;
arphdr(arphrd_appletlk)            -> ?ARPHRD_APPLETLK;
arphdr(arphrd_dlci)                -> ?ARPHRD_DLCI;
arphdr(arphrd_atm)                 -> ?ARPHRD_ATM;
arphdr(arphrd_metricom)            -> ?ARPHRD_METRICOM;
arphdr(arphrd_ieee1394)            -> ?ARPHRD_IEEE1394;
arphdr(arphrd_eui64)               -> ?ARPHRD_EUI64;
arphdr(arphrd_infiniband)          -> ?ARPHRD_INFINIBAND;
arphdr(arphrd_slip)                -> ?ARPHRD_SLIP;
arphdr(arphrd_cslip)               -> ?ARPHRD_CSLIP;
arphdr(arphrd_slip6)               -> ?ARPHRD_SLIP6;
arphdr(arphrd_cslip6)              -> ?ARPHRD_CSLIP6;
arphdr(arphrd_rsrvd)               -> ?ARPHRD_RSRVD;
arphdr(arphrd_adapt)               -> ?ARPHRD_ADAPT;
arphdr(arphrd_rose)                -> ?ARPHRD_ROSE;
arphdr(arphrd_x25)                 -> ?ARPHRD_X25;
arphdr(arphrd_hwx25)               -> ?ARPHRD_HWX25;
arphdr(arphrd_can)                 -> ?ARPHRD_CAN;
arphdr(arphrd_ppp)                 -> ?ARPHRD_PPP;
arphdr(arphrd_cisco)               -> ?ARPHRD_CISCO;
arphdr(arphrd_hdlc)                -> ?ARPHRD_HDLC;
arphdr(arphrd_lapb)                -> ?ARPHRD_LAPB;
arphdr(arphrd_ddcmp)               -> ?ARPHRD_DDCMP;
arphdr(arphrd_rawhdlc)             -> ?ARPHRD_RAWHDLC;
arphdr(arphrd_tunnel)              -> ?ARPHRD_TUNNEL;
arphdr(arphrd_tunnel6)             -> ?ARPHRD_TUNNEL6;
arphdr(arphrd_frad)                -> ?ARPHRD_FRAD;
arphdr(arphrd_skip)                -> ?ARPHRD_SKIP;
arphdr(arphrd_loopback)            -> ?ARPHRD_LOOPBACK;
arphdr(arphrd_localtlk)            -> ?ARPHRD_LOCALTLK;
arphdr(arphrd_fddi)                -> ?ARPHRD_FDDI;
arphdr(arphrd_bif)                 -> ?ARPHRD_BIF;
arphdr(arphrd_sit)                 -> ?ARPHRD_SIT;
arphdr(arphrd_ipddp)               -> ?ARPHRD_IPDDP;
arphdr(arphrd_ipgre)               -> ?ARPHRD_IPGRE;
arphdr(arphrd_pimreg)              -> ?ARPHRD_PIMREG;
arphdr(arphrd_hippi)               -> ?ARPHRD_HIPPI;
arphdr(arphrd_ash)                 -> ?ARPHRD_ASH;
arphdr(arphrd_econet)              -> ?ARPHRD_ECONET;
arphdr(arphrd_irda)                -> ?ARPHRD_IRDA;
arphdr(arphrd_fcpp)                -> ?ARPHRD_FCPP;
arphdr(arphrd_fcal)                -> ?ARPHRD_FCAL;
arphdr(arphrd_fcpl)                -> ?ARPHRD_FCPL;
arphdr(arphrd_fcfabric)            -> ?ARPHRD_FCFABRIC;
arphdr(arphrd_ieee802_tr)          -> ?ARPHRD_IEEE802_TR;
arphdr(arphrd_ieee80211)           -> ?ARPHRD_IEEE80211;
arphdr(arphrd_ieee80211_prism)     -> ?ARPHRD_IEEE80211_PRISM;
arphdr(arphrd_ieee80211_radiotap)  -> ?ARPHRD_IEEE80211_RADIOTAP;
arphdr(arphrd_ieee802154)          -> ?ARPHRD_IEEE802154;
arphdr(arphrd_phonet)              -> ?ARPHRD_PHONET;
arphdr(arphrd_phonet_pipe)         -> ?ARPHRD_PHONET_PIPE;
arphdr(arphrd_caif)                -> ?ARPHRD_CAIF;
arphdr(arphrd_void)                -> ?ARPHRD_VOID;
arphdr(arphrd_none)                -> ?ARPHRD_NONE;

arphdr(X)                          -> X.
-endif.